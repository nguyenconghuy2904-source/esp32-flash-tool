"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[968],{3830:(t,s,i)=>{i.d(s,{n:()=>e});class e{getEraseSize(t,s){return s}}},7968:(t,s,i)=>{i.d(s,{ESP32C6ROM:()=>_});var e=i(3830);class _ extends e.n{constructor(){super(...arguments),this.CHIP_NAME="ESP32-C6",this.IMAGE_CHIP_ID=13,this.EFUSE_BASE=0x600b0800,this.EFUSE_BLOCK1_ADDR=this.EFUSE_BASE+68,this.MAC_EFUSE_REG=this.EFUSE_BASE+68,this.UART_CLKDIV_REG=0x3ff40014,this.UART_CLKDIV_MASK=1048575,this.UART_DATE_REG_ADDR=0x6000007c,this.FLASH_WRITE_SIZE=1024,this.BOOTLOADER_FLASH_OFFSET=0,this.FLASH_SIZES={"1MB":0,"2MB":16,"4MB":32,"8MB":48,"16MB":64},this.SPI_REG_BASE=0x60002000,this.SPI_USR_OFFS=24,this.SPI_USR1_OFFS=28,this.SPI_USR2_OFFS=32,this.SPI_MOSI_DLEN_OFFS=36,this.SPI_MISO_DLEN_OFFS=40,this.SPI_W0_OFFS=88}async getPkgVersion(t){let s=this.EFUSE_BASE+68;return await t.readReg(s+12)>>21&7}async getChipRevision(t){let s=this.EFUSE_BASE+68;return(await t.readReg(s+12)&1835008)>>18}async getChipDescription(t){return(0===await this.getPkgVersion(t)?"ESP32-C6":"unknown ESP32-C6")+(" (revision "+await this.getChipRevision(t)+")")}async getChipFeatures(t){return["Wi-Fi 6","BT 5","IEEE802.15.4"]}async getCrystalFreq(t){return 40}_d2h(t){let s=(+t).toString(16);return 1===s.length?"0"+s:s}async readMac(t){let s=await t.readReg(this.MAC_EFUSE_REG);s>>>=0;let i=await t.readReg(this.MAC_EFUSE_REG+4);i=i>>>0&65535;let e=new Uint8Array(6);return e[0]=i>>8&255,e[1]=255&i,e[2]=s>>24&255,e[3]=s>>16&255,e[4]=s>>8&255,e[5]=255&s,this._d2h(e[0])+":"+this._d2h(e[1])+":"+this._d2h(e[2])+":"+this._d2h(e[3])+":"+this._d2h(e[4])+":"+this._d2h(e[5])}getEraseSize(t,s){return s}}}}]);